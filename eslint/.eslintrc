{
  "root": true,
  "extends": [
    "plugin:@typescript-eslint/recommended",
    "plugin:jsx-a11y/recommended"
  ],
  "parser": "@typescript-eslint/parser",
  "plugins": [
    "jsx-a11y",
    "import",
    "react-hooks",
    "@typescript-eslint",
    "prettier",
    "cypress"
  ],
  "env": {
    "browser": true,
    "node": true,
    "es6": true,
    "jest": true,
    "cypress/globals": true
  },
  "globals": {
    "JSX": "readonly"
  },
  "settings": {
    "react": {
      "version": "detect"
    },
    "import/parsers": {
      "@typescript-eslint/parser": [
        ".ts",
        ".tsx"
      ]
    },
    "import/resolver": {
      "node": {
        "extensions": [
          ".js",
          ".jsx",
          ".ts",
          ".tsx"
        ]
      },
      "typescript": {
        "alwaysTryTypes": true,
        // always try to resolve types under `<root>@types` directory even it doesn't contain any source code, like `@types/unist`
        "project": [
          "tsconfig.json",
          "server/tsconfig.json"
        ]
      }
    }
  },
  "rules": {
    "no-alert": "error",
    "no-console": "error",
    "react-hooks/rules-of-hooks": "error",
    "prettier/prettier": [
      "warn",
      {},
      {
        "properties": {
          "usePrettierrc": true
        }
      }
    ],
    "import/order": [
      "warn",
      {
        "groups": [
          "builtin",
          "external",
          "internal",
          "parent",
          "sibling",
          "index",
          "object"
        ],
        "newlines-between": "always",
        "alphabetize": {
          "order": "asc",
          "caseInsensitive": true
        }
      }
    ],
    "import/named": "error",
    "import/default": "error",
    "import/export": "error",
    "import/no-named-as-default": "warn",
    "import/no-named-as-default-member": "off",
    "import/no-duplicates": "error",
    "import/no-unresolved": "error",
    "@typescript-eslint/consistent-type-imports": "warn",
    "@typescript-eslint/no-explicit-any": "off",
    "@typescript-eslint/ban-types": "off",
    "@typescript-eslint/ban-ts-comment": "off",
    "@typescript-eslint/no-empty-function": "off"
  },
  "overrides": [
    {
      "files": [
        "*.js"
      ],
      "rules": {
        "@typescript-eslint/explicit-module-boundary-types": [
          "off"
        ],
        "@typescript-eslint/no-var-requires": [
          "off"
        ]
      }
    },
    {
      "files": [
        "**/*.stories.*"
      ],
      "rules": {
        "import/no-anonymous-default-export": "off"
      }
    }
  ]
}
