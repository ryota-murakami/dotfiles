// Generated by CoffeeScript 2.0.0-beta9-dev
var child_process, EmberScript, emBinary, fork, fs, path, runModule;
child_process = require('child_process');
fs = require('fs');
path = require('path');
EmberScript = require('./module');
runModule = require('./run').runModule;
module.exports = !(null != require.extensions['.em']);
if (null != require.extensions['.em'])
  require.extensions['.em'];
else
  require.extensions['.em'] = function (module, filename) {
    var csAst, input, js, jsAst;
    input = fs.readFileSync(filename, 'utf8');
    csAst = EmberScript.parse(input, { raw: true });
    jsAst = EmberScript.compile(csAst);
    js = EmberScript.js(jsAst);
    return runModule(module, js, jsAst, filename);
  };
if (null != require.extensions['.litem'])
  require.extensions['.litem'];
else
  require.extensions['.litem'] = function (module, filename) {
    var csAst, input, js, jsAst;
    input = fs.readFileSync(filename, 'utf8');
    csAst = EmberScript.parse(input, {
      raw: true,
      literate: true
    });
    jsAst = EmberScript.compile(csAst);
    js = EmberScript.js(jsAst);
    return runModule(module, js, jsAst, filename);
  };
fork = child_process.fork;
if (!fork.emPatched) {
  emBinary = path.resolve('bin', 'ember-script');
  child_process.fork = function (file, args, options) {
    if (null == args)
      args = [];
    if (null == options)
      options = {};
    if (in$(path.extname(file), [
        '.em',
        '.litem',
        '.coffee',
        '.litcoffee'
      ])) {
      if (!Array.isArray(args)) {
        args = [];
        options = args || {};
      }
      options.execPath || (options.execPath = emBinary);
    }
    return fork(file, args, options);
  };
  child_process.fork.emPatched = true;
}
function in$(member, list) {
  for (var i = 0, length = list.length; i < length; ++i)
    if (i in list && list[i] === member)
      return true;
  return false;
}
