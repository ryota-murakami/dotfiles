{"name":"atom-color-highlight","main":"./lib/atom-color-highlight","version":"3.0.8","private":true,"description":"Highlights color in files","repository":{"type":"git","url":"https://github.com/abe33/atom-color-highlight"},"license":"MIT","engines":{"atom":">=0.136.0"},"devDependencies":{"qq":"*"},"dependencies":{"q":"1.x","underscore-plus":"1.x","pigments":">= 3.2.0","mixto":"1.x","event-kit":"0.7.x","grim":"^1"},"readme":"# Atom Color Highlight [![Build Status](https://travis-ci.org/abe33/atom-color-highlight.svg?branch=master)](https://travis-ci.org/abe33/atom-color-highlight)\n\nHighlights colors in files.\n\n![AtomColorHighlight Screenshot](https://raw.github.com/abe33/atom-color-highlight/master/atom-color-highlight-variables.gif)\n\n![AtomColorHighlight Screenshot](https://raw.github.com/abe33/atom-color-highlight/master/atom-color-highlight.jpg)\n\n### Project Palette Support\n\nIf you have the [project-palette-finder package](https://atom.io/packages/project-palette-finder) installed, the package will automatically benefit from the palette definitions:\n\n![AtomColorHighlight And Project Palette Screenshot](https://raw.github.com/abe33/atom-color-highlight/master/atom-color-highlight-palette.jpg)\n\n### API\n\nThis package provides some API so that you can access the models it creates for the text editors:\n\n#### Observing Models Creation\n\n```coffeescript\natom.packages.activatePackage('atom-color-highlight').then (pkg) ->\n  atomColorHighlight = pkg.mainModule\n\n  atomColorHighlight.observeColorHighlightModels (model) ->\n    # Model is an instance of AtomColorHighlightModel\n```\n\n#### Retrieving Models For Text Editors\n\n```coffeescript\natom.packages.activatePackage('atom-color-highlight').then (pkg) ->\n  atomColorHighlight = pkg.mainModule\n\n  model = atomColorHighlight.modelForEditor(editor)\n```\n\n#### Listening To A Model's Markers Update\n\n```coffeescript\nmodel.onDidUpdateMarkers (markers) ->\n  # Do something with markers\n```\n\nThe `markers` array contains the display buffer markers for all the colors found in the corresponding text editor. Those markers contains extra properties with color data:\n\n* `marker.bufferMarker.properties.color`: The color `String` that was matched by the model.\n* `marker.bufferMarker.properties.cssColor`: The CSS representation of the color as a `String`.\n* `marker.bufferMarker.properties.textColor`: The text color, based on the original color luminance, computed beforehand.\n\n### Modifying Markers Styles\n\nTo target the classical markers, use the following rule:\n\n```less\natom-text-edidor, atom-text-editor::shadow {\n  atom-color-highlight color-marker .region {\n    // ...\n  }\n}\n```\n\nAnd to target the dot marker at end of lines, use the following rule:\n\n```less\natom-text-edidor, atom-text-editor::shadow {\n  atom-color-highlight dot-color-marker {\n    // ...\n  }\n}\n```\n\n### Extending Color Parsing\n\nYou can register a new color expression using the `Color.addExpression` method.\n\n```coffeescript\natom.packages.activatePackage('atom-color-highlight').then (pkg) ->\n  atomColorHighlight = pkg.mainModule\n  {Color} = atomColorHighlight\n\n  Color.addExpression 'name', 'regexp', (color, expression, fileVariables) ->\n    # modify color using data extracted from expression\n```\n\nThe first argument is a string that match the new expression using regular expressions.\nThis string will be used to match the expression both when scanning the\nbuffer and when creating a `Color` object for the various matches.\n\nNote that the regular expression source will be concatened with the other\nexpressions to create the `RegExp` used on the buffer.\nIn that regards, selectors such `^` and `$` should be avoided at all cost.\n\nThe second argument is the function called by the `Color` class when the\ncurrent expression match your regexp. It'll be called with the `Color` instance\nto modify, the matching expression as a string and an object containing the variables found in the file (can be colors or any other values).\n\nFor instance, the CSS hexadecimal RGB notation is defined as follow:\n\n```coffeescript\nColor.addExpression 'css_hexa_6', \"#([\\\\da-fA-F]{6})(?![\\\\da-fA-F])\", (color, expression, fileVariables) ->\n  [m, hexa] = @onigRegExp.search(expression)\n\n  color.hex = hexa.match\n```\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/abe33/atom-color-highlight/issues"},"homepage":"https://github.com/abe33/atom-color-highlight","_id":"atom-color-highlight@3.0.8","_shasum":"44d44a906bdbcefee79b065e93a15288cb0620a1","_resolved":"file:../d-115221-5801-1cigvqf/package.tgz","_from":"../d-115221-5801-1cigvqf/package.tgz"}